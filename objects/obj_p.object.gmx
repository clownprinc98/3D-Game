<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init variables for moving
z=5;//z is at the eye level
height = 40;

zdir=0;
zspeed=0;
zprevious=5;
display_mouse_set(display_get_width()/2,display_get_height()/2)
//Acceleration
accelerate=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision Checking + Smooth Reactions//

z -= zspeed;
zref=min(p3dc_ray(global.level_collision,0,0,0,x-1.3,y-1.3,z,0,0,-1),
p3dc_ray(global.level_collision,0,0,0,x-1.3,y+1.3,z,0,0,-1),
p3dc_ray(global.level_collision,0,0,0,x+1.3,y-1.3,z,0,0,-1),
p3dc_ray(global.level_collision,0,0,0,x+1.3,y+1.3,z,0,0,-1));

if(zref &lt;= 5 and zspeed &lt; 0){
    zref = zprevious-4;
    zspeed = 1;
    z = zprevious-1;
    x = xprevious;
    y = yprevious;
}


if(zref &lt;= 5){
    z = 5+z-zref;
    zspeed = 1;
}else{
    zspeed+=0.1;
}

zprevious=z;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//MOVING AROUND/FORCING INSIDE THE ROOM//

//MOUSELOOK
var sw,sh;
sw = display_get_width()/2;
sh = display_get_height()/2;

direction += (sw- display_mouse_get_x())/4;
zdir += (sh - display_mouse_get_y())/4;

display_mouse_set(sw,sh);
zdir = min( max(zdir,-70) ,85);

//MOVE
if(keyboard_check(vk_left) or keyboard_check(ord('A'))){
    x += lengthdir_x(2, direction+90);
    y += lengthdir_y(2, direction+90);
}
if(keyboard_check(vk_right) or keyboard_check(ord('D'))){
    x += lengthdir_x(2, direction-90);
    y += lengthdir_y(2, direction-90);
}
if(keyboard_check(vk_up) or keyboard_check(ord('W'))){
    x += lengthdir_x(2, direction);
    y += lengthdir_y(2, direction);
}
if(keyboard_check(vk_down) or keyboard_check(ord('S'))){
    x += lengthdir_x(2, direction-180);
    y += lengthdir_y(2, direction-180);
}

//Force inside the room
if(x &lt; 4){
    x=xprevious;
}
if(y &lt; 4){
    y=yprevious;
}
if(x &gt; room_width-4){
    x=room_width-4;
}
if(y &gt; room_height-4){
    y=room_height-4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//COLLISION CODE DONE IN THE BULLET. Change the variable spd here to change how far it moves per step (distance of 30/step at the moment)
var i;

var xcomp = cos(direction/180*pi);
var ycomp = -sin(direction/180*pi);
var zcomp = tan(degtorad(zdir));

p3dc_set_modrot(0,0,degtorad(global.doorInst.zdir));
var dist = p3dc_ray_rotation(global.doorInst.col_model, global.doorInst.x, 
global.doorInst.y, global.doorInst.z, 
x,y,z+height,
xcomp, ycomp, zcomp);

if(dist != 10000000){
    global.doorInst.opening ^= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the 3D projection
draw_set_color(c_white);

d3d_set_projection(x,y,z+height,x+cos(degtorad(direction))*cos(degtorad(zdir)),
y-sin(degtorad(direction))*cos(degtorad(zdir)),
z+height+sin(degtorad(zdir)), 0,0,1);

/*
d3d_set_projection_ext(x,y,z,
x+cos(degtorad(direction))*cos(degtorad(zdir)),
y-sin(degtorad(direction))*cos(degtorad(zdir)),
z+sin(degtorad(zdir)),0,0,1,45,view_wview[0]/view_hview[0],1,262144);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(zspeed = 1){
    zspeed =- 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
