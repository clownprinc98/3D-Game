<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 60;

hitdis=0;

//If the hitobj is equal to noone, then it means that the level was hit
//or nothing was hit. If it isn't noone, then an objectwas hit.
hitobj=noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zprevious=z;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tempdis,i;

//Distance to the closest object is equal to speed, if this
//is true after the collision checks nothing was crossed over
//IE: We hit nothing
hitdis=spd;

//Actually move the bullet
x+=xdir*spd;
y+=ydir*spd;
z+=zdir*spd;

//Shoot a ray from the bullets previous position towards current one to see if it has crossed over a triangle
//in the level.
tempdis=p3dc_ray(world_col,0,0,0,xprevious,yprevious,zprevious,xdir,ydir,zdir);

//We hit a triangle on the level, the larger the distance (if under speed) the closer to the player it is
if(tempdis &lt;= hitdis){
    hitdis=tempdis;//Set the closest hit thing to the level
}

//Now we shoot all the shootable objects (make their parents a shootable_object parent)
with(parent_interactable){
    var tempdis;
    //Do the same thing as above, shoot a ray towards the camera from the previous spot, but use a ray, not ray_still.
    //And check it against the bots position instead of the levels.
    p3dc_set_modrot(degtorad(xdir),degtorad(ydir),degtorad(zdir));
    tempdis = p3dc_ray_rotation(global.player_collision,x,y,z,other.xprevious,other.yprevious,other.zprevious,other.xdir,other.ydir,other.zdir);
    
    if(tempdis &lt; other.hitdis) {//We hit the target, and check if it is closer to the player than the level was
     other.hitdis = tempdis;
     other.hitobj = id;
    }
}

with(hitobj){
     switch(object_index){

     case(obj_door): //WE HIT A DOOR
        opening ^= 1;
        with(other){//Do something with the bullet, put its code below here
          instance_destroy();//Destroy the bullet, it hit something
        }
     break;
    }          

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
