<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This turns the light off to begin with
//Turn it to 1 if you want it to be on at first
flash=0;

//this makes the sprite that we draw over the players view have a hole in it. You can shape the hole to your liking by editting the spr_flash sprite
//Black is completely see-through (alpha=0) and white is solid (alpha=1)
//Adding color to spr_dark will make the dark areas around the light colored
//To make the flashlight area itself colored, edit spr_flash to have the middle slighty lighter, then add color to the same area on spr_dark
var newSprite = sprite_duplicate(spr_dark);
var oSprite = sprite_duplicate(spr_flash);
sprite_set_alpha_from_sprite(newSprite,oSprite);
//d3d_set_fog(1,c_black,-1000,200);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //This code tells to draw the following on the view of the player
d3d_set_projection_ortho(0,0,640,480,0);
if (flash==1) {
 //Draws the covering sprite
 //This needs to be the size of the screen view, or stretched to be as such
 //Depending on the starting darkness you'll need to work the grey area around the black in spr_flash to something that fits your fog
 //That makes it so the area around the light isn't completely black
 //Match it up so it's the same around it edges when yours face-to-face with a wall for the nicest effect
 //A few traila and error fitting runs might be needed unless you use the same vaules as I do here
 draw_sprite(spr_dark,1,0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This swhiches the flashlight on and off
//If it's on, turn it off
//If it's off, turn it on
if (flash==1)
{
 flash=0;
     //Turns fog on if the flashlight is off
     d3d_set_fog(1,c_black,-1000,200);
}
else
{
 flash=1; 
 //Turns fog off, showing dark areas as bright if they are in the light!!!
 //GENIUS!!!
 d3d_set_fog(1,c_black,-100,500);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
