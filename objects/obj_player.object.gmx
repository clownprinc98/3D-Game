<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inventoryOpen = false;

/* INIT POTION EFFECTS */
JpotionJumps = 0;
fastWalk = 0;
fastSteps = 0;
madPotionActive = 0;
madPotionTicks = 0;
/*END POTION INITS*/

health = 100;


/* interction variables */
reachLength = 75;
heldObject = noone;
holdingObject = 0;
/* movement variables */
mSpeed = 3;
omSpeed = mSpeed; // original move speed.
mass = 1;
zdirection=0;
dir=0;
sneaking = false;
zspeed = 0;
walkDirX = 0;
walkDirY = 0;
walkDirZ = 0;
x=350;
y=350;
z=0;
floorHeight=z;
canJump=1;
zdir=0;
zprevious=5;
height = 60;
width = 2;
length = 2;

globalvar player_col;
//Create a player collision model
player_col= p3dc_begin_model();
    p3dc_add_block(-width/2,-length/2,0,width/2,length/2,height);
p3dc_end_model();



// The making of the fittest, Carroll, Sean B
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(window_has_focus() and !PAUSED){

if(madPotionActive){
    madPotionTicks += 1;
    draw_set_alpha(0.5);
    
    if(madPotionTicks &gt;= 500){
        madPotionActive = 0;
        madPotionTicks=0;
        draw_set_alpha(1);
    }
}

if(fastWalk){
    if(fastSteps &gt; 500){
        event_perform(ev_other, ev_user1);
    }
}
    
    // MOUSE LOOKING
var sw,sh;
sw = display_get_width()/2;
sh = display_get_height()/2;

direction += (sw- display_mouse_get_x())/4;
zdir += (sh - display_mouse_get_y())/4;

display_mouse_set(sw,sh);
zdir = min( max(zdir,-70) ,85);
    
    
    z += zspeed;

    if(z &lt; 0){
        z = floorHeight;
        canJump = 1;
    }
    
    if(z &gt; floorHeight){
        zspeed -= 0.25*mass;
    }
    else if(z &lt; floorHeight){
        z = floorHeight;
    }
    else{
        zspeed=0;
    }
    
    // check ground under me
    if(p3dc_check_still(player_col,x,y,z-1,world_col) == true){
          floorHeight = z;
          canJump = 1;
    }else{
        floorHeight = -1; // keep falling until we find jesus or the floor.
        canJump = 0;
        for(var i = 0; i &lt; array_length_1d(OBJECT); i++){
            var obj = OBJECT[i]
            if(obj != heldObject){
                // first check under self
                p3dc_set_modrot(degtorad(obj.xdir),degtorad(obj.ydir),degtorad(obj.zdir));
                if(p3dc_check(player_col,x,y, z-1, obj.col_model, obj.x,obj.y,obj.z+obj.h)){
                    if(has_attr("solid", obj.attrs)){
                        floorHeight = z;
                        canJump = 1;
                    }
                }
            }
        }
        
        
    }
    
    // check if something is in front of me at my knees.
    if(p3dc_check_still(player_col,x,y,z+(height/10), world_col) == true){
        // check higher than knees.
        if(p3dc_check_still(player_col,x,y,z+((6*height)/10), world_col) == true){
            x=xprevious;
            y=yprevious;
            canJump = 0;
        }
        else if(p3dc_check_still(player_col,x,y,z+((4*height)/10), world_col) == true){
            //the collision is &lt; knee height. STAIRS!
            z += mSpeed;
            floorHeight += mSpeed;
        }
        else{
            //the collision is around my waist height. VAULT STAIRS!
            z += mSpeed*1.5;
            floorHeight +=  mSpeed*1.5;
        }
    }else{
        // check for doors or items on the gound. or windows. I guess. 
        for(var i = 0; i &lt; array_length_1d(OBJECT); i++){
            var obj = OBJECT[i]
            // check for collision at toes
            p3dc_set_modrot(degtorad(obj.xdir),degtorad(obj.ydir),degtorad(obj.zdir));
            if(p3dc_check_rotation(player_col,x,y,z+(height/10), obj.col_model, obj.x,obj.y,obj.z + obj.h,0,0,0) == true){
                // then check in walking direciton.
                p3dc_set_modrot(degtorad(obj.xdir),degtorad(obj.ydir),degtorad(obj.zdir));
                if(p3dc_check_rotation(player_col,x,y,z + (6*height/10), obj.col_model, obj.x,obj.y,obj.z + obj.h,0,0,0)){
                    if(has_attr("solid", obj.attrs) and has_attr("pushable", obj.attrs)){
                        // check if block doesn't collide with world and push block.
                        if(canJump and 
                        !p3dc_check_still(obj.col_model,obj.x + walkDirX,obj.y + walkDirY,obj.z+(obj.h/2), world_col)
                        ){
                            obj.WDY = walkDirY;
                            obj.WDX = walkDirX;
                            obj.x += walkDirX;
                            obj.y += walkDirY;
                        }else if(obj != heldObject){
                            x = xprevious;
                            y = yprevious;
                            break;
                        }
                        //canJump = 0;
                       
                    }else{
                        // can't push it.
                        x = xprevious;
                        y = yprevious;
                        break;
                    }
                }
                else if(p3dc_check(player_col,x,y,z + (4*height/10), obj.col_model, obj.x,obj.y,obj.z + obj.h)){
                    //the collision is &lt; knee height. STAIRS!
                    z += mSpeed;
                    floorHeight += mSpeed;
                    break;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    x += lengthdir_x(mSpeed,direction);
    y += lengthdir_y(mSpeed,direction);
    
    walkDirX = lengthdir_x(mSpeed,direction);
    walkDirY = lengthdir_y(mSpeed,direction);
    if(fastWalk){
        fastSteps += 1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    x += lengthdir_x(mSpeed,direction-180);
    y += lengthdir_y(mSpeed,direction-180);
    
    walkDirX = lengthdir_x(mSpeed,direction-180);
    walkDirY = lengthdir_y(mSpeed,direction-180);
    if(fastWalk){
        fastSteps += 1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    x += lengthdir_x(mSpeed,direction-90);
    y += lengthdir_y(mSpeed,direction-90);
    
    walkDirX = lengthdir_x(mSpeed,direction-90);
    walkDirY = lengthdir_y(mSpeed,direction-90);
    if(fastWalk){
        fastSteps += 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    x += lengthdir_x(mSpeed,direction+90);
    y += lengthdir_y(mSpeed,direction+90);
    
    walkDirX = lengthdir_x(mSpeed,direction+90);
    walkDirY = lengthdir_y(mSpeed,direction+90);
    
    if(fastWalk){
        fastSteps += 1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//paused ^= 1;

//var o = instance_create(x+10,y,obj_box);
//o.z = 500;

OBJECT[OINDEX] = instance_create(x+100,y,obj_crate);

with(OBJECT[OINDEX]){
    h = 20;
    x = self.x;
    y = self.y
    z = 50*array_length_1d(OBJECT);
    w = 25;
    l = 25;
    OINDEX+=1;;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xcomp = cos(direction/180*pi);
var ycomp = -sin(direction/180*pi);
var zcomp = tan(degtorad(zdir));
/*
p3dc_set_modrot(0,0,degtorad(global.doorInst.zdir));
var dist = p3dc_ray_rotation(global.doorInst.col_model, global.doorInst.x, 
global.doorInst.y, global.doorInst.z, 
x,y,z+height,
xcomp, ycomp, zcomp);


if(dist != 10000000){
    global.doorInst.opening ^= 1;
}
*/
if( !PAUSED){
    Rxdir = cos(direction/180*pi);
    Rydir = -sin(direction/180*pi);
    Rzdir = tan(degtorad(zdir));

    if(!holdingObject){
        for(var i = 0; i &lt; array_length_1d(OBJECT); i++){
            var obj = OBJECT[i]
            p3dc_set_modrot(degtorad(obj.xdir),degtorad(obj.ydir),degtorad(obj.zdir));
            tempdis = p3dc_ray_rotation(obj.col_model,obj.x,obj.y,obj.z,x,y,z+height,Rxdir,Rydir,Rzdir);
            if(tempdis &lt; reachLength){
                if(has_attr("pickupable", obj.attrs)){
                    obj.heldBy = self.id;
                    obj.held = 1;
                    self.holdingObject = 1;
                    self.heldObject = obj;
                    break;
                }
                else if(has_attr("door", obj.attrs)){
                    obj.opening ^=1;
                }
            }
        }
    }
    else{
        // throw or place whatever we have.
        heldObject.heldBy = noone;
        heldObject.held = 0;
        heldObject.direction = direction;
        //heldObject.zdir = Rzdir;
        
        heldObject.speed = 10;
        
        heldObject.zspeed = (zdir/10) * 2.5;
        
        heldObject = noone;
        holdingObject=0;
        
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Out of fast steps.

fastWalk = 0;
fastSteps = 0;
mSpeed = omSpeed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump potion init;

JpotionJumps = ceil(random_range(2,5));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the 3D projection

d3d_set_projection_ext(x,y,z+height,
x+cos(degtorad(direction))*cos(degtorad(zdir)),
y-sin(degtorad(direction))*cos(degtorad(zdir)),
z+height+sin(degtorad(zdir)),0,0,1,45,view_wview[0]/view_hview[0],1,262144);

d3d_light_define_point(1,x,y,z+2*height,1000,c_white);
d3d_light_enable(1, true);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();

audio_play_sound(snd_bazinga, 1, 0);
alarm[0] = 30;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inventoryOpen){
    PAUSED = false;
    inventoryOpen = false;
    // close inventory;
    display_mouse_set(display_get_width()/2,display_get_height()/2);
    
    with(obj_inventory){
        instance_destroy();
    }
}
else{
    inventoryOpen = true;
    PAUSED = true;
    // open inventory;
    instance_create(x,y,obj_inventory);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    if(canJump==1 and sneaking==0 and z==floorHeight){
        if(JpotionJumps){
            audio_play_sound(snd_bigGrunt, 1,0);
            zspeed = 8;
            JpotionJumps--;
        }else{
            audio_play_sound(choose(snd_grunt, snd_grunt2), 1, 0)
            zspeed = 4;
        }
        canJump=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!PAUSED){
    if(sneaking==false){
        
        sneaking = true;
        width /= 2;
        length /= 2;
        height /= 2;
        mSpeed /= 2;
        
        p3dc_clear_model(player_col);
        player_col= p3dc_begin_model();
            p3dc_add_block(-width/2,-length/2,0,width/2,length/2,height);
        p3dc_end_model();
        
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !PAUSED){
    if(sneaking== true){
    
        sneaking = false;
        width *= 2;
        length *= 2;
        height  *= 2;
        mSpeed *= 2;
        
        p3dc_clear_model(player_col);
        player_col= p3dc_begin_model();
            p3dc_add_block(-width/2,-length/2,0,width/2,length/2,height);
        p3dc_end_model();
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>7,7</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
